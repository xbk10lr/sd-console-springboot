<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sd.console.mapper.BatchJobExecutionParamsMapper" >
  <resultMap id="BaseResultMap" type="sd.console.dto.generate.BatchJobExecutionParams" >
    <result column="JOB_EXECUTION_ID" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="TYPE_CD" property="typeCd" jdbcType="VARCHAR" />
    <result column="KEY_NAME" property="keyName" jdbcType="VARCHAR" />
    <result column="STRING_VAL" property="stringVal" jdbcType="VARCHAR" />
    <result column="DATE_VAL" property="dateVal" jdbcType="TIMESTAMP" />
    <result column="LONG_VAL" property="longVal" jdbcType="BIGINT" />
    <result column="DOUBLE_VAL" property="doubleVal" jdbcType="DOUBLE" />
    <result column="IDENTIFYING" property="identifying" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JOB_EXECUTION_ID, TYPE_CD, KEY_NAME, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, 
    IDENTIFYING
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sd.console.dto.generate.BatchJobExecutionParamsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BATCH_JOB_EXECUTION_PARAMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="sd.console.dto.generate.BatchJobExecutionParamsExample" >
    delete from BATCH_JOB_EXECUTION_PARAMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sd.console.dto.generate.BatchJobExecutionParams" >
    insert into BATCH_JOB_EXECUTION_PARAMS (JOB_EXECUTION_ID, TYPE_CD, KEY_NAME, 
      STRING_VAL, DATE_VAL, LONG_VAL, 
      DOUBLE_VAL, IDENTIFYING)
    values (#{jobExecutionId,jdbcType=BIGINT}, #{typeCd,jdbcType=VARCHAR}, #{keyName,jdbcType=VARCHAR}, 
      #{stringVal,jdbcType=VARCHAR}, #{dateVal,jdbcType=TIMESTAMP}, #{longVal,jdbcType=BIGINT}, 
      #{doubleVal,jdbcType=DOUBLE}, #{identifying,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="sd.console.dto.generate.BatchJobExecutionParams" >
    insert into BATCH_JOB_EXECUTION_PARAMS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        JOB_EXECUTION_ID,
      </if>
      <if test="typeCd != null" >
        TYPE_CD,
      </if>
      <if test="keyName != null" >
        KEY_NAME,
      </if>
      <if test="stringVal != null" >
        STRING_VAL,
      </if>
      <if test="dateVal != null" >
        DATE_VAL,
      </if>
      <if test="longVal != null" >
        LONG_VAL,
      </if>
      <if test="doubleVal != null" >
        DOUBLE_VAL,
      </if>
      <if test="identifying != null" >
        IDENTIFYING,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="typeCd != null" >
        #{typeCd,jdbcType=VARCHAR},
      </if>
      <if test="keyName != null" >
        #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="stringVal != null" >
        #{stringVal,jdbcType=VARCHAR},
      </if>
      <if test="dateVal != null" >
        #{dateVal,jdbcType=TIMESTAMP},
      </if>
      <if test="longVal != null" >
        #{longVal,jdbcType=BIGINT},
      </if>
      <if test="doubleVal != null" >
        #{doubleVal,jdbcType=DOUBLE},
      </if>
      <if test="identifying != null" >
        #{identifying,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sd.console.dto.generate.BatchJobExecutionParamsExample" resultType="java.lang.Integer" >
    select count(*) from BATCH_JOB_EXECUTION_PARAMS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BATCH_JOB_EXECUTION_PARAMS
    <set >
      <if test="record.jobExecutionId != null" >
        JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.typeCd != null" >
        TYPE_CD = #{record.typeCd,jdbcType=VARCHAR},
      </if>
      <if test="record.keyName != null" >
        KEY_NAME = #{record.keyName,jdbcType=VARCHAR},
      </if>
      <if test="record.stringVal != null" >
        STRING_VAL = #{record.stringVal,jdbcType=VARCHAR},
      </if>
      <if test="record.dateVal != null" >
        DATE_VAL = #{record.dateVal,jdbcType=TIMESTAMP},
      </if>
      <if test="record.longVal != null" >
        LONG_VAL = #{record.longVal,jdbcType=BIGINT},
      </if>
      <if test="record.doubleVal != null" >
        DOUBLE_VAL = #{record.doubleVal,jdbcType=DOUBLE},
      </if>
      <if test="record.identifying != null" >
        IDENTIFYING = #{record.identifying,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BATCH_JOB_EXECUTION_PARAMS
    set JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      TYPE_CD = #{record.typeCd,jdbcType=VARCHAR},
      KEY_NAME = #{record.keyName,jdbcType=VARCHAR},
      STRING_VAL = #{record.stringVal,jdbcType=VARCHAR},
      DATE_VAL = #{record.dateVal,jdbcType=TIMESTAMP},
      LONG_VAL = #{record.longVal,jdbcType=BIGINT},
      DOUBLE_VAL = #{record.doubleVal,jdbcType=DOUBLE},
      IDENTIFYING = #{record.identifying,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>