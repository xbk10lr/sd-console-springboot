<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sd.console.mapper.BatchJobExecutionMapper" >
  <resultMap id="BaseResultMap" type="sd.console.dto.generate.BatchJobExecution" >
    <id column="JOB_EXECUTION_ID" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="VERSION" property="version" jdbcType="BIGINT" />
    <result column="JOB_INSTANCE_ID" property="jobInstanceId" jdbcType="BIGINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="EXIT_CODE" property="exitCode" jdbcType="VARCHAR" />
    <result column="EXIT_MESSAGE" property="exitMessage" jdbcType="VARCHAR" />
    <result column="LAST_UPDATED" property="lastUpdated" jdbcType="TIMESTAMP" />
    <result column="JOB_CONFIGURATION_LOCATION" property="jobConfigurationLocation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JOB_EXECUTION_ID, VERSION, JOB_INSTANCE_ID, CREATE_TIME, START_TIME, END_TIME, STATUS, 
    EXIT_CODE, EXIT_MESSAGE, LAST_UPDATED, JOB_CONFIGURATION_LOCATION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sd.console.dto.generate.BatchJobExecutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BATCH_JOB_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BATCH_JOB_EXECUTION
    where JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BATCH_JOB_EXECUTION
    where JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="sd.console.dto.generate.BatchJobExecutionExample" >
    delete from BATCH_JOB_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sd.console.dto.generate.BatchJobExecution" >
    insert into BATCH_JOB_EXECUTION (JOB_EXECUTION_ID, VERSION, JOB_INSTANCE_ID, 
      CREATE_TIME, START_TIME, END_TIME, 
      STATUS, EXIT_CODE, EXIT_MESSAGE, 
      LAST_UPDATED, JOB_CONFIGURATION_LOCATION
      )
    values (#{jobExecutionId,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{jobInstanceId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{exitCode,jdbcType=VARCHAR}, #{exitMessage,jdbcType=VARCHAR}, 
      #{lastUpdated,jdbcType=TIMESTAMP}, #{jobConfigurationLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="sd.console.dto.generate.BatchJobExecution" >
    insert into BATCH_JOB_EXECUTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        JOB_EXECUTION_ID,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
      <if test="jobInstanceId != null" >
        JOB_INSTANCE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="exitCode != null" >
        EXIT_CODE,
      </if>
      <if test="exitMessage != null" >
        EXIT_MESSAGE,
      </if>
      <if test="lastUpdated != null" >
        LAST_UPDATED,
      </if>
      <if test="jobConfigurationLocation != null" >
        JOB_CONFIGURATION_LOCATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="jobInstanceId != null" >
        #{jobInstanceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="exitCode != null" >
        #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="jobConfigurationLocation != null" >
        #{jobConfigurationLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sd.console.dto.generate.BatchJobExecutionExample" resultType="java.lang.Integer" >
    select count(*) from BATCH_JOB_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BATCH_JOB_EXECUTION
    <set >
      <if test="record.jobExecutionId != null" >
        JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.jobInstanceId != null" >
        JOB_INSTANCE_ID = #{record.jobInstanceId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.exitCode != null" >
        EXIT_CODE = #{record.exitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.exitMessage != null" >
        EXIT_MESSAGE = #{record.exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdated != null" >
        LAST_UPDATED = #{record.lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobConfigurationLocation != null" >
        JOB_CONFIGURATION_LOCATION = #{record.jobConfigurationLocation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BATCH_JOB_EXECUTION
    set JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      VERSION = #{record.version,jdbcType=BIGINT},
      JOB_INSTANCE_ID = #{record.jobInstanceId,jdbcType=BIGINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=VARCHAR},
      EXIT_CODE = #{record.exitCode,jdbcType=VARCHAR},
      EXIT_MESSAGE = #{record.exitMessage,jdbcType=VARCHAR},
      LAST_UPDATED = #{record.lastUpdated,jdbcType=TIMESTAMP},
      JOB_CONFIGURATION_LOCATION = #{record.jobConfigurationLocation,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sd.console.dto.generate.BatchJobExecution" >
    update BATCH_JOB_EXECUTION
    <set >
      <if test="version != null" >
        VERSION = #{version,jdbcType=BIGINT},
      </if>
      <if test="jobInstanceId != null" >
        JOB_INSTANCE_ID = #{jobInstanceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="exitCode != null" >
        EXIT_CODE = #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        EXIT_MESSAGE = #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="jobConfigurationLocation != null" >
        JOB_CONFIGURATION_LOCATION = #{jobConfigurationLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="sd.console.dto.generate.BatchJobExecution" >
    update BATCH_JOB_EXECUTION
    set VERSION = #{version,jdbcType=BIGINT},
      JOB_INSTANCE_ID = #{jobInstanceId,jdbcType=BIGINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      EXIT_CODE = #{exitCode,jdbcType=VARCHAR},
      EXIT_MESSAGE = #{exitMessage,jdbcType=VARCHAR},
      LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP},
      JOB_CONFIGURATION_LOCATION = #{jobConfigurationLocation,jdbcType=VARCHAR}
    where JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT}
  </update>
</mapper>