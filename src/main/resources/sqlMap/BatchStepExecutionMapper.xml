<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sd.console.mapper.BatchStepExecutionMapper" >
  <resultMap id="BaseResultMap" type="sd.console.dto.generate.BatchStepExecution" >
    <id column="STEP_EXECUTION_ID" property="stepExecutionId" jdbcType="BIGINT" />
    <result column="VERSION" property="version" jdbcType="BIGINT" />
    <result column="STEP_NAME" property="stepName" jdbcType="VARCHAR" />
    <result column="JOB_EXECUTION_ID" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="COMMIT_COUNT" property="commitCount" jdbcType="BIGINT" />
    <result column="READ_COUNT" property="readCount" jdbcType="BIGINT" />
    <result column="FILTER_COUNT" property="filterCount" jdbcType="BIGINT" />
    <result column="WRITE_COUNT" property="writeCount" jdbcType="BIGINT" />
    <result column="READ_SKIP_COUNT" property="readSkipCount" jdbcType="BIGINT" />
    <result column="WRITE_SKIP_COUNT" property="writeSkipCount" jdbcType="BIGINT" />
    <result column="PROCESS_SKIP_COUNT" property="processSkipCount" jdbcType="BIGINT" />
    <result column="ROLLBACK_COUNT" property="rollbackCount" jdbcType="BIGINT" />
    <result column="EXIT_CODE" property="exitCode" jdbcType="VARCHAR" />
    <result column="EXIT_MESSAGE" property="exitMessage" jdbcType="VARCHAR" />
    <result column="LAST_UPDATED" property="lastUpdated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STEP_EXECUTION_ID, VERSION, STEP_NAME, JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, 
    COMMIT_COUNT, READ_COUNT, FILTER_COUNT, WRITE_COUNT, READ_SKIP_COUNT, WRITE_SKIP_COUNT, 
    PROCESS_SKIP_COUNT, ROLLBACK_COUNT, EXIT_CODE, EXIT_MESSAGE, LAST_UPDATED
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sd.console.dto.generate.BatchStepExecutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BATCH_STEP_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BATCH_STEP_EXECUTION
    where STEP_EXECUTION_ID = #{stepExecutionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BATCH_STEP_EXECUTION
    where STEP_EXECUTION_ID = #{stepExecutionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="sd.console.dto.generate.BatchStepExecutionExample" >
    delete from BATCH_STEP_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sd.console.dto.generate.BatchStepExecution" >
    insert into BATCH_STEP_EXECUTION (STEP_EXECUTION_ID, VERSION, STEP_NAME, 
      JOB_EXECUTION_ID, START_TIME, END_TIME, 
      STATUS, COMMIT_COUNT, READ_COUNT, 
      FILTER_COUNT, WRITE_COUNT, READ_SKIP_COUNT, 
      WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, ROLLBACK_COUNT, 
      EXIT_CODE, EXIT_MESSAGE, LAST_UPDATED
      )
    values (#{stepExecutionId,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{stepName,jdbcType=VARCHAR}, 
      #{jobExecutionId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{commitCount,jdbcType=BIGINT}, #{readCount,jdbcType=BIGINT}, 
      #{filterCount,jdbcType=BIGINT}, #{writeCount,jdbcType=BIGINT}, #{readSkipCount,jdbcType=BIGINT}, 
      #{writeSkipCount,jdbcType=BIGINT}, #{processSkipCount,jdbcType=BIGINT}, #{rollbackCount,jdbcType=BIGINT}, 
      #{exitCode,jdbcType=VARCHAR}, #{exitMessage,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="sd.console.dto.generate.BatchStepExecution" >
    insert into BATCH_STEP_EXECUTION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stepExecutionId != null" >
        STEP_EXECUTION_ID,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
      <if test="stepName != null" >
        STEP_NAME,
      </if>
      <if test="jobExecutionId != null" >
        JOB_EXECUTION_ID,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="commitCount != null" >
        COMMIT_COUNT,
      </if>
      <if test="readCount != null" >
        READ_COUNT,
      </if>
      <if test="filterCount != null" >
        FILTER_COUNT,
      </if>
      <if test="writeCount != null" >
        WRITE_COUNT,
      </if>
      <if test="readSkipCount != null" >
        READ_SKIP_COUNT,
      </if>
      <if test="writeSkipCount != null" >
        WRITE_SKIP_COUNT,
      </if>
      <if test="processSkipCount != null" >
        PROCESS_SKIP_COUNT,
      </if>
      <if test="rollbackCount != null" >
        ROLLBACK_COUNT,
      </if>
      <if test="exitCode != null" >
        EXIT_CODE,
      </if>
      <if test="exitMessage != null" >
        EXIT_MESSAGE,
      </if>
      <if test="lastUpdated != null" >
        LAST_UPDATED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stepExecutionId != null" >
        #{stepExecutionId,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="commitCount != null" >
        #{commitCount,jdbcType=BIGINT},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=BIGINT},
      </if>
      <if test="filterCount != null" >
        #{filterCount,jdbcType=BIGINT},
      </if>
      <if test="writeCount != null" >
        #{writeCount,jdbcType=BIGINT},
      </if>
      <if test="readSkipCount != null" >
        #{readSkipCount,jdbcType=BIGINT},
      </if>
      <if test="writeSkipCount != null" >
        #{writeSkipCount,jdbcType=BIGINT},
      </if>
      <if test="processSkipCount != null" >
        #{processSkipCount,jdbcType=BIGINT},
      </if>
      <if test="rollbackCount != null" >
        #{rollbackCount,jdbcType=BIGINT},
      </if>
      <if test="exitCode != null" >
        #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sd.console.dto.generate.BatchStepExecutionExample" resultType="java.lang.Integer" >
    select count(*) from BATCH_STEP_EXECUTION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BATCH_STEP_EXECUTION
    <set >
      <if test="record.stepExecutionId != null" >
        STEP_EXECUTION_ID = #{record.stepExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.stepName != null" >
        STEP_NAME = #{record.stepName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobExecutionId != null" >
        JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.commitCount != null" >
        COMMIT_COUNT = #{record.commitCount,jdbcType=BIGINT},
      </if>
      <if test="record.readCount != null" >
        READ_COUNT = #{record.readCount,jdbcType=BIGINT},
      </if>
      <if test="record.filterCount != null" >
        FILTER_COUNT = #{record.filterCount,jdbcType=BIGINT},
      </if>
      <if test="record.writeCount != null" >
        WRITE_COUNT = #{record.writeCount,jdbcType=BIGINT},
      </if>
      <if test="record.readSkipCount != null" >
        READ_SKIP_COUNT = #{record.readSkipCount,jdbcType=BIGINT},
      </if>
      <if test="record.writeSkipCount != null" >
        WRITE_SKIP_COUNT = #{record.writeSkipCount,jdbcType=BIGINT},
      </if>
      <if test="record.processSkipCount != null" >
        PROCESS_SKIP_COUNT = #{record.processSkipCount,jdbcType=BIGINT},
      </if>
      <if test="record.rollbackCount != null" >
        ROLLBACK_COUNT = #{record.rollbackCount,jdbcType=BIGINT},
      </if>
      <if test="record.exitCode != null" >
        EXIT_CODE = #{record.exitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.exitMessage != null" >
        EXIT_MESSAGE = #{record.exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdated != null" >
        LAST_UPDATED = #{record.lastUpdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BATCH_STEP_EXECUTION
    set STEP_EXECUTION_ID = #{record.stepExecutionId,jdbcType=BIGINT},
      VERSION = #{record.version,jdbcType=BIGINT},
      STEP_NAME = #{record.stepName,jdbcType=VARCHAR},
      JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=VARCHAR},
      COMMIT_COUNT = #{record.commitCount,jdbcType=BIGINT},
      READ_COUNT = #{record.readCount,jdbcType=BIGINT},
      FILTER_COUNT = #{record.filterCount,jdbcType=BIGINT},
      WRITE_COUNT = #{record.writeCount,jdbcType=BIGINT},
      READ_SKIP_COUNT = #{record.readSkipCount,jdbcType=BIGINT},
      WRITE_SKIP_COUNT = #{record.writeSkipCount,jdbcType=BIGINT},
      PROCESS_SKIP_COUNT = #{record.processSkipCount,jdbcType=BIGINT},
      ROLLBACK_COUNT = #{record.rollbackCount,jdbcType=BIGINT},
      EXIT_CODE = #{record.exitCode,jdbcType=VARCHAR},
      EXIT_MESSAGE = #{record.exitMessage,jdbcType=VARCHAR},
      LAST_UPDATED = #{record.lastUpdated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sd.console.dto.generate.BatchStepExecution" >
    update BATCH_STEP_EXECUTION
    <set >
      <if test="version != null" >
        VERSION = #{version,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        STEP_NAME = #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="jobExecutionId != null" >
        JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="commitCount != null" >
        COMMIT_COUNT = #{commitCount,jdbcType=BIGINT},
      </if>
      <if test="readCount != null" >
        READ_COUNT = #{readCount,jdbcType=BIGINT},
      </if>
      <if test="filterCount != null" >
        FILTER_COUNT = #{filterCount,jdbcType=BIGINT},
      </if>
      <if test="writeCount != null" >
        WRITE_COUNT = #{writeCount,jdbcType=BIGINT},
      </if>
      <if test="readSkipCount != null" >
        READ_SKIP_COUNT = #{readSkipCount,jdbcType=BIGINT},
      </if>
      <if test="writeSkipCount != null" >
        WRITE_SKIP_COUNT = #{writeSkipCount,jdbcType=BIGINT},
      </if>
      <if test="processSkipCount != null" >
        PROCESS_SKIP_COUNT = #{processSkipCount,jdbcType=BIGINT},
      </if>
      <if test="rollbackCount != null" >
        ROLLBACK_COUNT = #{rollbackCount,jdbcType=BIGINT},
      </if>
      <if test="exitCode != null" >
        EXIT_CODE = #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        EXIT_MESSAGE = #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where STEP_EXECUTION_ID = #{stepExecutionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="sd.console.dto.generate.BatchStepExecution" >
    update BATCH_STEP_EXECUTION
    set VERSION = #{version,jdbcType=BIGINT},
      STEP_NAME = #{stepName,jdbcType=VARCHAR},
      JOB_EXECUTION_ID = #{jobExecutionId,jdbcType=BIGINT},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      COMMIT_COUNT = #{commitCount,jdbcType=BIGINT},
      READ_COUNT = #{readCount,jdbcType=BIGINT},
      FILTER_COUNT = #{filterCount,jdbcType=BIGINT},
      WRITE_COUNT = #{writeCount,jdbcType=BIGINT},
      READ_SKIP_COUNT = #{readSkipCount,jdbcType=BIGINT},
      WRITE_SKIP_COUNT = #{writeSkipCount,jdbcType=BIGINT},
      PROCESS_SKIP_COUNT = #{processSkipCount,jdbcType=BIGINT},
      ROLLBACK_COUNT = #{rollbackCount,jdbcType=BIGINT},
      EXIT_CODE = #{exitCode,jdbcType=VARCHAR},
      EXIT_MESSAGE = #{exitMessage,jdbcType=VARCHAR},
      LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP}
    where STEP_EXECUTION_ID = #{stepExecutionId,jdbcType=BIGINT}
  </update>
</mapper>